import telebot
from telebot import types
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardRemove
from database import get_user_data, save_user, get_saved_addresses, save_address

TOKEN = '8189225431:AAG9nJf_uZGwuWH5GwQCj0LZgwzKuYHP6qc'
MAIN_CHANNEL_ID = '-1002333885798'
DUSHANBE_CHANNEL_ID = '-1002606426389'
bot = telebot.TeleBot(TOKEN)

users = {}

commands = [
    types.BotCommand("start", "–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
]

def get_city_keyboard():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    cities = ['–î—É—à–∞–Ω–±–µ', '–•—É–¥–∂–∞–Ω–¥', '–ì–∞—Ñ—É—Ä–æ–≤', '–ë—É—Å—Ç–æ–Ω (–ß–∫–∞–ª–æ–≤—Å–∫)']
    for city in cities:
        keyboard.add(KeyboardButton(city))
    return keyboard

def get_address_keyboard(chat_id):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    addresses = get_saved_addresses(chat_id)
    for address in addresses:
        keyboard.add(KeyboardButton(address))
    keyboard.add(KeyboardButton("üÜï –í–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–π –∞–¥—Ä–µ—Å"))
    return keyboard

def get_start_keyboard():
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton("–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑", callback_data="start_order"))
    keyboard.add(InlineKeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="contact_info"))
    return keyboard

def get_inline_keyboard():
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton("–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", callback_data="publish_order"))
    return keyboard

@bot.message_handler(commands=['start'])
def start(message):
    phone, _ = get_user_data(message.chat.id)

    if phone:
        bot.send_message(message.chat.id, "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! –ú–æ–∂–µ—Ç–µ —Å—Ä–∞–∑—É –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É.", reply_markup=get_start_keyboard())
    else:
        keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(KeyboardButton("üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True))
        bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:", reply_markup=keyboard)

@bot.message_handler(content_types=['contact'])
def register_user(message):
    if message.contact is not None:
        save_user(message.chat.id, message.contact.phone_number)
        users[message.chat.id] = {}
        bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥.", reply_markup=get_city_keyboard())

@bot.callback_query_handler(func=lambda call: call.data == "start_order")
def start_order(call):
    phone, _ = get_user_data(call.message.chat.id)
    
    if not phone:
        bot.send_message(call.message.chat.id, "–°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, –æ—Ç–ø—Ä–∞–≤–∏–≤ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.", reply_markup=get_start_keyboard())
        return
    
    users[call.message.chat.id] = {}  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –ø–µ—Ä–µ–¥ –Ω–æ–≤—ã–º –∑–∞–∫–∞–∑–æ–º
    
    bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥:", reply_markup=get_city_keyboard())
    bot.register_next_step_handler(call.message, set_city)

@bot.message_handler(func=lambda message: message.text in ['–î—É—à–∞–Ω–±–µ', '–•—É–¥–∂–∞–Ω–¥', '–ì–∞—Ñ—É—Ä–æ–≤', '–ë—É—Å—Ç–æ–Ω (–ß–∫–∞–ª–æ–≤—Å–∫)'])
def set_city(message):
    users[message.chat.id] = {'city': message.text}
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –º–∞–≥–∞–∑–∏–Ω:')
    bot.register_next_step_handler(message, get_shop_name)

def get_shop_name(message):
    users[message.chat.id]['shop'] = message.text
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –∞–¥—Ä–µ—Å –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π:', reply_markup=get_address_keyboard(message.chat.id))
    bot.register_next_step_handler(message, get_address)

def get_address(message):
    if message.text == "üÜï –í–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–π –∞–¥—Ä–µ—Å":
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∞–¥—Ä–µ—Å:')
        bot.register_next_step_handler(message, save_new_address)
    else:
        finalize_order(message.chat.id, message.text)

def save_new_address(message):
    save_address(message.chat.id, message.text)
    finalize_order(message.chat.id, message.text)

def finalize_order(chat_id, address):
    user_data = users.get(chat_id, {})
    phone, _ = get_user_data(chat_id)
    
    request_text = (f"\U0001F4CC –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!\n\n"
                    f"\U0001F4DE –ù–æ–º–µ—Ä: {phone}\n"
                    f"\U0001F3D9 –ì–æ—Ä–æ–¥: {user_data['city']}\n"
                    f"\U0001F3EC –ú–∞–≥–∞–∑–∏–Ω: {user_data['shop']}\n"
                    f"\U0001F4E6 –ê–¥—Ä–µ—Å: {address}")
    
    users[chat_id]['address'] = address
    bot.send_message(chat_id, request_text, reply_markup=get_inline_keyboard())

@bot.callback_query_handler(func=lambda call: call.data == "publish_order")
def publish_order(call):
    user_data = users.get(call.message.chat.id, {})
    phone, _ = get_user_data(call.message.chat.id)
    
    request_text = (f"\U0001F4CC –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!\n\n"
                    f"\U0001F4DE –ù–æ–º–µ—Ä: {phone}\n"
                    f"\U0001F3D9 –ì–æ—Ä–æ–¥: {user_data.get('city')}\n"
                    f"\U0001F3EC –ú–∞–≥–∞–∑–∏–Ω: {user_data.get('shop')}\n"
                    f"\U0001F4E6 –ê–¥—Ä–µ—Å: {user_data.get('address')}")
    
    target_channel = DUSHANBE_CHANNEL_ID if user_data.get('city') == "–î—É—à–∞–Ω–±–µ" else MAIN_CHANNEL_ID
    bot.send_message(target_channel, request_text)
    
    # ‚úÖ –û–ø–æ–≤–µ—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot.send_message(call.message.chat.id, 
                     "–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞! ‚úÖ\n"
                     "–û–∂–∏–¥–∞–π—Ç–µ, –∫—É—Ä—å–µ—Ä —Å–∫–æ—Ä–æ –∑–∞–±–µ—Ä—ë—Ç –≤–∞—à—É –ø–æ—Å—ã–ª–∫—É.\n\n"
                     "üìû –ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –∑–≤–æ–Ω–∏—Ç–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞—à–µ–º—É –æ–ø–µ—Ä–∞—Ç–æ—Ä—É:\n"
                     "+992006774000", 
                     reply_markup=get_start_keyboard())

@bot.callback_query_handler(func=lambda call: call.data == "contact_info")
def send_contact_info(call):
    contact_text = "üìû –°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏\n+992006774000\n\nüì∏ Instagram: @speed_de1ivery"
    instagram_link = "https://www.instagram.com/speed_de1ivery"
    bot.send_message(call.message.chat.id, contact_text)
    bot.send_message(call.message.chat.id, f"üîó {instagram_link}")

bot.polling(none_stop=True)
